{
	"info": {
		"_postman_id": "b8dd4d8e-cda8-4c44-b661-6992b1b8c9b4",
		"name": "API collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37753882"
	},
	"item": [
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Fixed missing closing parenthesis in the second and third tests\r",
							"pm.test(\"Status code should be 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.value).to.eql(100);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"string_you_want_to_search\");\r",
							"});\r",
							"pm.test(\"Status code name should have an OK string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.postman.com/collections/3865219-8ed1a723-7194-4433-9aef-352e9b86d1e0?access_key=PMAT-01H40M7GCGGGYX7EFK4BFTRHZX",
					"protocol": "https",
					"host": [
						"api",
						"postman",
						"com"
					],
					"path": [
						"collections",
						"3865219-8ed1a723-7194-4433-9aef-352e9b86d1e0"
					],
					"query": [
						{
							"key": "access_key",
							"value": "PMAT-01H40M7GCGGGYX7EFK4BFTRHZX"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "https://api.postman.com/collections/3865219-8ed1a723-7194-4433-9aef-352e9b86d1e0?access_key=PMAT-01H40M7GCGGGYX7EFK4BFTRHZX",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.postman.com/collections/3865219-8ed1a723-7194-4433-9aef-352e9b86d1e0?access_key=PMAT-01H40M7GCGGGYX7EFK4BFTRHZX",
					"protocol": "https",
					"host": [
						"api",
						"postman",
						"com"
					],
					"path": [
						"collections",
						"3865219-8ed1a723-7194-4433-9aef-352e9b86d1e0"
					],
					"query": [
						{
							"key": "access_key",
							"value": "PMAT-01H40M7GCGGGYX7EFK4BFTRHZX"
						}
					]
				},
				"description": "continuation task 8\r\n"
			},
			"response": []
		},
		{
			"name": "https://api.postman.com/collections/3865219-8ed1a723-7194-4433-9aef-352e9b86d1e0?access_key=PMAT-01H40M7GCGGGYX7EFK4BFTRHZX",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validate the schema of the response body\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.have.property('collection').that.is.an('object').and.not.empty;\r",
							"    pm.expect(responseData.collection).to.have.property('info').that.is.an('object').and.not.empty;\r",
							"    pm.expect(responseData.collection.info).to.have.property('_postman_id').that.is.a('string');\r",
							"    pm.expect(responseData.collection.info).to.have.property('name').that.is.a('string');\r",
							"    pm.expect(responseData.collection.info).to.have.property('schema').that.is.a('string');\r",
							"    pm.expect(responseData.collection.info).to.have.property('updatedAt').that.is.a('string');\r",
							"    pm.expect(responseData.collection.info).to.have.property('createdAt').that.is.a('string');\r",
							"    pm.expect(responseData.collection.info).to.have.property('lastUpdatedBy').that.is.a('string');\r",
							"    pm.expect(responseData.collection.info).to.have.property('uid').that.is.a('string');\r",
							"    pm.expect(responseData.collection).to.have.property('item').that.is.an('array').and.not.empty;\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.postman.com/collections/3865219-8ed1a723-7194-4433-9aef-352e9b86d1e0?access_key=PMAT-01H40M7GCGGGYX7EFK4BFTRHZX",
					"protocol": "https",
					"host": [
						"api",
						"postman",
						"com"
					],
					"path": [
						"collections",
						"3865219-8ed1a723-7194-4433-9aef-352e9b86d1e0"
					],
					"query": [
						{
							"key": "access_key",
							"value": "PMAT-01H40M7GCGGGYX7EFK4BFTRHZX"
						}
					]
				},
				"description": "api "
			},
			"response": []
		}
	]
}